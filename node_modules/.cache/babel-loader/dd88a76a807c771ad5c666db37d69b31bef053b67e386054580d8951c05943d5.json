{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\info\\\\src\\\\components\\\\ContactsForm\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { description, cta, links } from \"../../utils/constants\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactsForm = () => {\n  _s();\n  const [isCopied, setIsCopied] = useState(false);\n  const copyLink = () => {\n    navigator.clipboard.writeText(cta.CONTACT_LINK).then(() => setIsCopied(true));\n    if (typeof window !== \"undefined\") window.setTimeout(() => setIsCopied(false), 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contacts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts-label\",\n      children: description.LABEL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts-title\",\n      children: description.TITLE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts-description\",\n      children: description.TEXT\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts-clickable-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contacts-clickable-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tooltip ${isCopied && \"copied\"}`,\n          children: \"\\u0421\\u043A\\u043E\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), cta.START_DESCRIPTION, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"link\",\n          onClick: copyLink,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"a-dog\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), cta.CONTACT_LINK.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), cta.END_DESCRIPTION]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: links.TELEGRAM,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"standard-button\",\n          children: cta.BUTTON_TEXT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactsForm, \"dIAMLjsduWkZ4KaA+ylUo0FLqmM=\");\n_c = ContactsForm;\nexport default ContactsForm;\nvar _c;\n$RefreshReg$(_c, \"ContactsForm\");","map":{"version":3,"names":["React","useState","description","cta","links","jsxDEV","_jsxDEV","ContactsForm","_s","isCopied","setIsCopied","copyLink","navigator","clipboard","writeText","CONTACT_LINK","then","window","setTimeout","className","children","LABEL","fileName","_jsxFileName","lineNumber","columnNumber","TITLE","TEXT","START_DESCRIPTION","onClick","slice","END_DESCRIPTION","href","TELEGRAM","target","rel","BUTTON_TEXT","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/info/src/components/ContactsForm/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { description, cta, links } from \"../../utils/constants\";\r\nimport \"./style.css\";\r\n\r\nconst ContactsForm = () => {\r\n    const [isCopied, setIsCopied] = useState(false);\r\n\r\n    const copyLink = () => {\r\n        navigator.clipboard\r\n            .writeText(cta.CONTACT_LINK)\r\n            .then(() => setIsCopied(true));\r\n        if (typeof window !== \"undefined\")\r\n            window.setTimeout(() => setIsCopied(false), 500);\r\n    };\r\n\r\n    return (\r\n        <div className=\"contacts-container\">\r\n            <div className=\"contacts-label\">{description.LABEL}</div>\r\n            <div className=\"contacts-title\">{description.TITLE}</div>\r\n            <div className=\"contacts-description\">{description.TEXT}</div>\r\n            <div className=\"contacts-clickable-block\">\r\n                <div className=\"contacts-clickable-text\">\r\n                    <div className={`tooltip ${isCopied && \"copied\"}`}>\r\n                        Скопировано!\r\n                    </div>\r\n                    {cta.START_DESCRIPTION}\r\n                    <span className=\"link\" onClick={copyLink}>\r\n                        <span className=\"a-dog\">@</span>\r\n                        {cta.CONTACT_LINK.slice(1)}\r\n                    </span>\r\n                    {cta.END_DESCRIPTION}\r\n                </div>\r\n                <a href={links.TELEGRAM} target=\"_blank\" rel=\"noreferrer\">\r\n                    <button className=\"standard-button\">\r\n                        {cta.BUTTON_TEXT}\r\n                    </button>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactsForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
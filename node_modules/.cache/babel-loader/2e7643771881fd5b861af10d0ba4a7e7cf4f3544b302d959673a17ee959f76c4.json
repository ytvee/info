{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\info\\\\src\\\\components\\\\ThemeSwitch\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport spriteList from \"../../assets/Sprites\";\nimport { themes } from \"../../domains/Theme\";\nimport { setCurrentTheme } from \"../../store/slices/application\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeSwitch = () => {\n  _s();\n  const appTheme = useSelector(state => state.application.currentTheme);\n  const dispatch = useDispatch();\n  const themeToggle = () => {\n    if (appTheme === themes.LIGHT) {\n      return dispatch(setCurrentTheme(themes.DARK));\n    }\n    return dispatch(setCurrentTheme(themes.LIGHT));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `toggle-switch ${appTheme}-container`,\n    onClick: themeToggle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toggle ${appTheme}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), spriteList.moon, spriteList.sun]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeSwitch, \"Oi9qI05V+FsLRTaFhB60Qyxab/U=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = ThemeSwitch;\nexport default ThemeSwitch;\nvar _c;\n$RefreshReg$(_c, \"ThemeSwitch\");","map":{"version":3,"names":["React","useDispatch","useSelector","spriteList","themes","setCurrentTheme","jsxDEV","_jsxDEV","ThemeSwitch","_s","appTheme","state","application","currentTheme","dispatch","themeToggle","LIGHT","DARK","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","moon","sun","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/info/src/components/ThemeSwitch/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport spriteList from \"../../assets/Sprites\";\r\nimport { themes } from \"../../domains/Theme\";\r\nimport { setCurrentTheme } from \"../../store/slices/application\";\r\nimport \"./style.css\";\r\n\r\nconst ThemeSwitch = () => {\r\n    const appTheme = useSelector((state) => state.application.currentTheme);\r\n    const dispatch = useDispatch();\r\n\r\n    const themeToggle = () => {\r\n        if (appTheme === themes.LIGHT) {\r\n            return dispatch(setCurrentTheme(themes.DARK));\r\n        }\r\n\r\n        return dispatch(setCurrentTheme(themes.LIGHT));\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={`toggle-switch ${appTheme}-container`}\r\n            onClick={themeToggle}\r\n        >\r\n            <div className={`toggle ${appTheme}`}></div>\r\n            {spriteList.moon}\r\n            {spriteList.sun}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ThemeSwitch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,SAASC,MAAM,QAAQ,qBAAqB;AAC5C,SAASC,eAAe,QAAQ,gCAAgC;AAChE,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,WAAW,CAACC,YAAY,CAAC;EACvE,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIL,QAAQ,KAAKN,MAAM,CAACY,KAAK,EAAE;MAC3B,OAAOF,QAAQ,CAACT,eAAe,CAACD,MAAM,CAACa,IAAI,CAAC,CAAC;IACjD;IAEA,OAAOH,QAAQ,CAACT,eAAe,CAACD,MAAM,CAACY,KAAK,CAAC,CAAC;EAClD,CAAC;EAED,oBACIT,OAAA;IACIW,SAAS,EAAE,iBAAiBR,QAAQ,YAAa;IACjDS,OAAO,EAAEJ,WAAY;IAAAK,QAAA,gBAErBb,OAAA;MAAKW,SAAS,EAAE,UAAUR,QAAQ;IAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3CrB,UAAU,CAACsB,IAAI,EACftB,UAAU,CAACuB,GAAG;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAACf,EAAA,CAtBID,WAAW;EAAA,QACIN,WAAW,EACXD,WAAW;AAAA;AAAA0B,EAAA,GAF1BnB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}